/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import { HTMLStencilElement, JSXBase } from '@stencil/core/internal';


export namespace Components {
  interface DsButton {
    'compact': boolean;
    'dense': boolean;
    'disabled': boolean;
    'interactive': boolean;
    'raised': boolean;
    'stroked': boolean;
    'unelevated': boolean;
  }
  interface DsCheckbox {
    'checked': boolean;
    'controlId': string;
    'disabled': boolean;
    'indeterminate': boolean;
  }
  interface DsPlayground {}
  interface MyComponent {
    /**
    * The first name
    */
    'first': string;
    /**
    * The last name
    */
    'last': string;
    /**
    * The middle name
    */
    'middle': string;
  }
  interface MyCounter {}
}

declare global {


  interface HTMLDsButtonElement extends Components.DsButton, HTMLStencilElement {}
  var HTMLDsButtonElement: {
    prototype: HTMLDsButtonElement;
    new (): HTMLDsButtonElement;
  };

  interface HTMLDsCheckboxElement extends Components.DsCheckbox, HTMLStencilElement {}
  var HTMLDsCheckboxElement: {
    prototype: HTMLDsCheckboxElement;
    new (): HTMLDsCheckboxElement;
  };

  interface HTMLDsPlaygroundElement extends Components.DsPlayground, HTMLStencilElement {}
  var HTMLDsPlaygroundElement: {
    prototype: HTMLDsPlaygroundElement;
    new (): HTMLDsPlaygroundElement;
  };

  interface HTMLMyComponentElement extends Components.MyComponent, HTMLStencilElement {}
  var HTMLMyComponentElement: {
    prototype: HTMLMyComponentElement;
    new (): HTMLMyComponentElement;
  };

  interface HTMLMyCounterElement extends Components.MyCounter, HTMLStencilElement {}
  var HTMLMyCounterElement: {
    prototype: HTMLMyCounterElement;
    new (): HTMLMyCounterElement;
  };
  interface HTMLElementTagNameMap {
    'ds-button': HTMLDsButtonElement;
    'ds-checkbox': HTMLDsCheckboxElement;
    'ds-playground': HTMLDsPlaygroundElement;
    'my-component': HTMLMyComponentElement;
    'my-counter': HTMLMyCounterElement;
  }
}

declare namespace LocalJSX {
  interface DsButton extends JSXBase.HTMLAttributes<HTMLDsButtonElement> {
    'compact'?: boolean;
    'dense'?: boolean;
    'disabled'?: boolean;
    'interactive'?: boolean;
    'raised'?: boolean;
    'stroked'?: boolean;
    'unelevated'?: boolean;
  }
  interface DsCheckbox extends JSXBase.HTMLAttributes<HTMLDsCheckboxElement> {
    'checked'?: boolean;
    'controlId'?: string;
    'disabled'?: boolean;
    'indeterminate'?: boolean;
  }
  interface DsPlayground extends JSXBase.HTMLAttributes<HTMLDsPlaygroundElement> {}
  interface MyComponent extends JSXBase.HTMLAttributes<HTMLMyComponentElement> {
    /**
    * The first name
    */
    'first'?: string;
    /**
    * The last name
    */
    'last'?: string;
    /**
    * The middle name
    */
    'middle'?: string;
  }
  interface MyCounter extends JSXBase.HTMLAttributes<HTMLMyCounterElement> {}

  interface IntrinsicElements {
    'ds-button': DsButton;
    'ds-checkbox': DsCheckbox;
    'ds-playground': DsPlayground;
    'my-component': MyComponent;
    'my-counter': MyCounter;
  }
}

export { LocalJSX as JSX };


declare module "@stencil/core" {
  export namespace JSX {
    interface IntrinsicElements extends LocalJSX.IntrinsicElements {}
  }
}


